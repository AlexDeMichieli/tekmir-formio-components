!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("Formio")):"function"==typeof define&&define.amd?define(["Formio"],t):"object"==typeof exports?exports.FormioCustomComponents=t(require("Formio")):e.FormioCustomComponents=t(e.Formio)}(self,(e=>(()=>{"use strict";var t={934:t=>{t.exports=e}},i={};function o(e){var l=i[e];if(void 0!==l)return l.exports;var r=i[e]={exports:{}};return t[e](r,r.exports,o),r.exports}o.d=(e,t)=>{for(var i in t)o.o(t,i)&&!o.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var l={};o.r(l),o.d(l,{ChuckUploader:()=>c});var r=o(934);const s=[{type:"textfield",key:"label",label:"Label",input:!0,tooltip:"The label for this field",validate:{required:!0}},{type:"textfield",key:"key",label:"Property Name",tooltip:"The name of this field in the API endpoint",input:!0,validate:{required:!0}},{type:"checkbox",key:"multiple",label:"Allow Multiple Files",input:!0,tooltip:"Whether to allow multiple files to be uploaded",defaultValue:!0},{type:"textfield",key:"filePattern",label:"File Pattern",input:!0,tooltip:"The file pattern accepted by this uploader"},{type:"textfield",key:"fileMaxSize",label:"Maximum File Size",input:!0,tooltip:"The maximum size of files"}],n=r.Formio.Components.baseEditForm;function a(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];return n([{key:"display",components:s},{key:"data",ignore:!0},{key:"validation",ignore:!0},{key:"api",ignore:!0},{key:"conditional",ignore:!0},{key:"logic",ignore:!0}],...t)}const p=r.Formio.Components.components.field;class u extends p{static editForm=(()=>a)();static schema(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];return p.schema({type:"chuckUploader",label:"Chuck Norris Uploader",key:"chuckUploader",input:!0,multiple:!0},...t)}static get builderInfo(){return{title:"Chuck Norris Uploader",icon:"upload",group:"custom",documentation:"/userguide/#chuckuploader",weight:70,schema:u.schema()}}constructor(e,t,i){super(e,t,i),this.chuckNorrisJoke="",this.uploadedFiles=[]}init(){super.init(),this.getChuckNorrisJoke()}render(){return super.render(this.renderTemplate("chuckUploader",{fileList:this.dataValue||[]}))}attach(e){const t=super.attach(e);return this.loadRefs(e,{fileInput:"single",fileBrowse:"single",uploadBtn:"single",fileList:"single"}),this.refs.fileBrowse&&this.addEventListener(this.refs.fileBrowse,"click",(e=>{e.preventDefault(),this.refs.fileInput&&this.refs.fileInput.click()})),this.refs.uploadBtn&&this.addEventListener(this.refs.uploadBtn,"click",(e=>{e.preventDefault(),this.refs.fileInput&&this.refs.fileInput.click()})),this.refs.fileInput&&this.addEventListener(this.refs.fileInput,"change",(e=>{const t=e.target.files;if(t&&t.length){console.log("Files selected:",t.length),console.log("Chuck Norris says:",this.chuckNorrisJoke||"Loading joke...");const e=Array.from(t).map((e=>e.name));this.uploadedFiles=[...this.uploadedFiles,...e],this.setValue(this.uploadedFiles),this.updateFileList(),this.getChuckNorrisJoke()}})),t}updateFileList(){if(this.refs.fileList&&this.uploadedFiles.length){let e='<ul class="list-group">';this.uploadedFiles.forEach((t=>{e+=`<li class="list-group-item">${t}</li>`})),e+="</ul>",this.refs.fileList.innerHTML=e}}async getChuckNorrisJoke(){try{const e=await fetch("https://api.chucknorris.io/jokes/random"),t=await e.json();console.log("Chuck Norris says:",t.value),this.chuckNorrisJoke=t.value}catch(e){console.error("Failed to get Chuck Norris joke:",e)}}get defaultSchema(){return u.schema()}}const c=u;return r.Formio.use({components:{chuckUploader:c},templates:{bootstrap:{chuckUploader:{form:function(e){return`\n    <div class="chuck-uploader-container">\n      <label class="${e.label.className}">\n        ${e.t(e.component.label)}\n      </label>\n      <div class="file-upload-wrapper">\n        <button ref="uploadBtn" class="btn btn-primary">\n          <i class="fa fa-upload"></i> Upload Files\n        </button>\n        <input \n          ref="fileInput" \n          type="file" \n          style="display:none" \n          ${e.component.multiple?"multiple":""}\n          accept="${e.component.filePattern||"*"}"\n        />\n        <a href="#" ref="fileBrowse" class="browse" style="display:none;">browse</a>\n        \n        <div class="alert alert-info mt-2">\n          <strong>Chuck Norris Upload</strong>\n          <p>Check the console for Chuck Norris jokes when uploading.</p>\n        </div>\n        \n        <div ref="fileList" class="file-list mt-3"></div>\n      </div>\n    </div>\n  `}}}}}),l})()));